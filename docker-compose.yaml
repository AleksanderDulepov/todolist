version: '3.8'

services:
  front:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    ports:
      - 80:80
    depends_on:
      - api
  api:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./.env
    restart: always
    ports:
        - 8000:8000
    depends_on:
      postgres:
        condition:
          service_healthy
      migrations:
        condition:
          service_completed_successfully
  migrations:
    build: .
    command: python manage.py migrate
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition:
          service_healthy
  postgres:
    image: postgres:12.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 3s
      timeout: 3s
      retries: 3
  tests:
    build: .
    command: python pytest
    env_file:
      - ./.env
    depends_on:
      api:
        condition:
          service_completed_successfully


volumes:
  postgres_data: