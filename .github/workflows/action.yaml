name: Build and deploy workflow
on: [push]

jobs:
  testing:
    runs-on: ubuntu-latest
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: install python
        uses: actions/setup-python@v2
      - name: install requirements
        run: pip install -r requirements.txt
      - name: render configs for testing
        run: |
          cat .env-ci | envsubst > .env
      - name: docker run
        run: docker compose up --build -d
      - name: run pytest
        run: docker compose exec -it api /bin/sh | pytest
  build_and_push:
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t aleksanderdulepov/django_todolist_repo:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push aleksanderdulepov/django_todolist_repo:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs to deploy
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat .env-ci | envsubst > deploy/.env
      - name: clone files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          password: ${{ secrets.VM_PASSWORD }}
          source: "deploy/docker-compose.yaml,deploy/.env"
          target: "django-app"
          strip_components: 1
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          password: ${{ secrets.VM_PASSWORD }}
          script: |
            cd django-app
            echo ${{ secrets.VM_PASSWORD }} | sudo -S docker compose up -d